package com.sascom.chickenstock.portfolio.domain; import jakarta.persistence.*; import lombok.*; @Entity @Table(name="position", uniqueConstraints=@UniqueConstraint(columnNames={"accountId","companyId"})) @Getter @Setter @NoArgsConstructor @AllArgsConstructor public class Position { @Id @GeneratedValue(strategy=GenerationType.IDENTITY) private Long id; private Long accountId; private Long companyId; private Long quantity=0L; private Long avgPrice=0L; public void applyBuy(long price, long qty){ long totalCostBefore=avgPrice*quantity; long totalCostAfter=totalCostBefore + price*qty; long newQty=quantity+qty; quantity=newQty; avgPrice=(newQty==0?0: totalCostAfter/newQty);} public void applySell(long qty){ quantity=Math.max(0, quantity-qty); if(quantity==0) avgPrice=0L; } public void rollbackBuy(long price, long qty){ long totalCostBefore=avgPrice*quantity; long totalCostAfter=totalCostBefore - price*qty; long newQty=Math.max(0, quantity-qty); quantity=newQty; avgPrice=(newQty==0?0: Math.max(0, totalCostAfter/newQty)); } public void rollbackSell(long qty){ quantity = quantity + qty; } }