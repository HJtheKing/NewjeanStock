package com.sascom.chickenstock.portfolio.infra.kafka; import com.sascom.chickenstock.portfolio.api.dto.AccountCompensationEvent; import com.sascom.chickenstock.portfolio.domain.service.PortfolioCompensationService; import lombok.RequiredArgsConstructor; import lombok.extern.slf4j.Slf4j; import org.springframework.beans.factory.annotation.Value; import org.springframework.kafka.annotation.KafkaListener; import org.springframework.stereotype.Component; @Slf4j @Component @RequiredArgsConstructor public class AccountCompensationConsumer { private final PortfolioCompensationService service; @Value("${topics.account-compensate}") private String topicName; @KafkaListener(topics = "#{__listener.topicName}", containerFactory="accountCompKafkaFactory") public void onMessage(AccountCompensationEvent e){ log.warn("[KAFKA] account compensation event received: {}", e); service.compensate(e); } }